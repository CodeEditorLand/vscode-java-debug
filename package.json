{
	"activationEvents": [
		"onLanguage:java",
		"onDebugInitialConfigurations",
		"onDebugResolve:java",
		"onCommand:JavaDebug.SpecifyProgramArgs",
		"onCommand:JavaDebug.PickJavaProcess"
	],
	"aiKey": "67d4461e-ccba-418e-8082-1bd0acfe8516",
	"capabilities": {
		"virtualWorkspaces": false
	},
	"contributes": {
		"breakpoints": [
			{
				"language": "java"
			}
		],
		"commands": [
			{
				"command": "java.debug.hotCodeReplace",
				"icon": {
					"dark": "images/commands/hot_code_replace.svg",
					"light": "images/commands/hot_code_replace.svg"
				},
				"title": "Hot Code Replace"
			},
			{
				"command": "java.debug.runJavaFile",
				"icon": "$(play)",
				"title": "Run Java"
			},
			{
				"command": "java.debug.debugJavaFile",
				"icon": "$(debug-alt-small)",
				"title": "Debug Java"
			},
			{
				"command": "java.debug.runFromProjectView",
				"icon": "$(play)",
				"title": "Run"
			},
			{
				"command": "java.debug.debugFromProjectView",
				"icon": "$(debug-alt-small)",
				"title": "Debug"
			},
			{
				"command": "java.debug.continueAll",
				"title": "Continue All"
			},
			{
				"command": "java.debug.continueOthers",
				"title": "Continue Others"
			},
			{
				"command": "java.debug.pauseAll",
				"title": "Pause All"
			},
			{
				"command": "java.debug.pauseOthers",
				"title": "Pause Others"
			},
			{
				"command": "java.debug.variables.showHex",
				"title": "Show as Hex"
			},
			{
				"command": "java.debug.variables.notShowHex",
				"title": "Show as Dec"
			},
			{
				"command": "java.debug.variables.showQualifiedNames",
				"title": "Show Qualified Names"
			},
			{
				"command": "java.debug.variables.notShowQualifiedNames",
				"title": "Show Simple Names"
			},
			{
				"command": "java.debug.variables.showStaticVariables",
				"title": "Show Static Variables"
			},
			{
				"command": "java.debug.variables.notShowStaticVariables",
				"title": "Hide Static Variables"
			},
			{
				"command": "java.debug.variables.showLogicalStructure",
				"title": "Enable Logical Structure View"
			},
			{
				"command": "java.debug.variables.notShowLogicalStructure",
				"title": "Disable Logical Structure View"
			},
			{
				"command": "java.debug.variables.showToString",
				"title": "Enable 'toString()' Object View"
			},
			{
				"command": "java.debug.variables.notShowToString",
				"title": "Disable 'toString()' Object View"
			},
			{
				"command": "java.debug.variables.autoExpandLazyVariables",
				"title": "Auto Expand Lazy Variables"
			},
			{
				"command": "java.debug.variables.manualExpandLazyVariables",
				"title": "Manual Expand Lazy Variables"
			}
		],
		"configuration": {
			"properties": {
				"java.debug.logLevel": {
					"default": "warn",
					"description": "%java.debugger.configuration.logLevel.description%",
					"enum": [
						"error",
						"warn",
						"info",
						"verbose"
					],
					"type": "string"
				},
				"java.debug.settings.console": {
					"default": "integratedTerminal",
					"description": "%java.debugger.configuration.console%",
					"enum": [
						"internalConsole",
						"integratedTerminal",
						"externalTerminal"
					],
					"enumDescriptions": [
						"%java.debugger.launch.internalConsole.description%",
						"%java.debugger.launch.integratedTerminal.description%",
						"%java.debugger.launch.externalTerminal.description%"
					],
					"type": "string"
				},
				"java.debug.settings.debugSupportOnDecompiledSource": {
					"default": "on",
					"description": "%java.debugger.configuration.debugSupportOnDecompiledSource.description%",
					"enum": [
						"on",
						"off"
					],
					"type": "string"
				},
				"java.debug.settings.enableRunDebugCodeLens": {
					"default": true,
					"description": "%java.debugger.configuration.enableRunDebugCodeLens.description%",
					"type": "boolean"
				},
				"java.debug.settings.exceptionBreakpoint.allowClasses": {
					"default": [],
					"description": "%java.debugger.configuration.exceptionBreakpoint.allowClasses%",
					"items": {
						"type": "string"
					},
					"type": "array"
				},
				"java.debug.settings.exceptionBreakpoint.exceptionTypes": {
					"default": [],
					"description": "%java.debugger.configuration.exceptionBreakpoint.exceptionTypes%",
					"items": {
						"type": "string"
					},
					"type": "array"
				},
				"java.debug.settings.exceptionBreakpoint.skipClasses": {
					"default": [],
					"description": "%java.debugger.configuration.exceptionBreakpoint.skipClasses%",
					"items": {
						"anyOf": [
							{
								"enum": [
									"$JDK",
									"$Libraries",
									"java.lang.ClassLoader",
									""
								],
								"enumDescriptions": [
									"%java.debugger.launch.skipClasses.skipJDK%",
									"%java.debugger.launch.skipClasses.skipLibraries%",
									"%java.debugger.launch.skipClasses.skipClassLoader%",
									"%java.debugger.launch.skipClasses.skipClassPattern%"
								]
							},
							"string"
						]
					},
					"type": "array"
				},
				"java.debug.settings.forceBuildBeforeLaunch": {
					"default": true,
					"description": "%java.debugger.configuration.forceBuildBeforeLaunch%",
					"type": "boolean"
				},
				"java.debug.settings.hotCodeReplace": {
					"default": "manual",
					"description": "%java.debugger.configuration.hotCodeReplace.description%",
					"enum": [
						"auto",
						"manual",
						"never"
					],
					"type": "string"
				},
				"java.debug.settings.jdwp.async": {
					"default": "auto",
					"description": "%java.debugger.configuration.jdwp.async.description%",
					"enum": [
						"auto",
						"on",
						"off"
					],
					"type": "string"
				},
				"java.debug.settings.jdwp.limitOfVariablesPerJdwpRequest": {
					"default": 100,
					"description": "%java.debugger.configuration.jdwp.limitOfVariablesPerJdwpRequest.description%",
					"minimum": 1,
					"type": "number"
				},
				"java.debug.settings.jdwp.requestTimeout": {
					"default": 3000,
					"description": "%java.debugger.configuration.jdwp.requestTimeout.description%",
					"minimum": 100,
					"type": "number"
				},
				"java.debug.settings.maxStringLength": {
					"default": 0,
					"description": "%java.debugger.configuration.maxStringLength.description%",
					"type": "number"
				},
				"java.debug.settings.numericPrecision": {
					"default": 0,
					"description": "%java.debugger.configuration.numericPrecision.description%",
					"type": "number"
				},
				"java.debug.settings.onBuildFailureProceed": {
					"default": false,
					"description": "%java.debugger.configuration.onBuildFailureProceed%",
					"type": "boolean"
				},
				"java.debug.settings.showHex": {
					"default": false,
					"description": "%java.debugger.configuration.showHex.description%",
					"type": "boolean"
				},
				"java.debug.settings.showLogicalStructure": {
					"default": true,
					"description": "%java.debugger.configuration.showLogicalStructure.description%",
					"type": "boolean"
				},
				"java.debug.settings.showQualifiedNames": {
					"default": false,
					"description": "%java.debugger.configuration.showQualifiedNames.description%",
					"type": "boolean"
				},
				"java.debug.settings.showStaticVariables": {
					"default": false,
					"description": "%java.debugger.configuration.showStaticVariables.description%",
					"type": "boolean"
				},
				"java.debug.settings.showToString": {
					"default": true,
					"description": "%java.debugger.configuration.showToString.description%",
					"type": "boolean"
				},
				"java.debug.settings.stepping.skipClasses": {
					"default": [],
					"description": "%java.debugger.launch.skipClasses.description%",
					"items": {
						"anyOf": [
							{
								"enum": [
									"$JDK",
									"$Libraries",
									"java.lang.ClassLoader",
									""
								],
								"enumDescriptions": [
									"%java.debugger.launch.skipClasses.skipJDK%",
									"%java.debugger.launch.skipClasses.skipLibraries%",
									"%java.debugger.launch.skipClasses.skipClassLoader%",
									"%java.debugger.launch.skipClasses.skipClassPattern%"
								]
							},
							"string"
						]
					},
					"type": "array"
				},
				"java.debug.settings.stepping.skipConstructors": {
					"default": false,
					"description": "%java.debugger.launch.skipConstructors.description%",
					"type": "boolean"
				},
				"java.debug.settings.stepping.skipStaticInitializers": {
					"default": false,
					"description": "%java.debugger.launch.skipStaticInitializers.description%",
					"type": "boolean"
				},
				"java.debug.settings.stepping.skipSynthetics": {
					"default": false,
					"description": "%java.debugger.launch.skipSynthetics.description%",
					"type": "boolean"
				},
				"java.debug.settings.vmArgs": {
					"default": "",
					"description": "%java.debugger.configuration.vmArgs.description%",
					"type": "string"
				},
				"java.silentNotification": {
					"default": false,
					"description": "%java.debugger.configuration.silentNotification%",
					"type": "boolean"
				}
			},
			"title": "%java.debugger.configuration.title%",
			"type": "object"
		},
		"debuggers": [
			{
				"configurationAttributes": {
					"attach": {
						"properties": {
							"hostName": {
								"default": "localhost",
								"description": "%java.debugger.attach.hostName.description%",
								"type": "string"
							},
							"port": {
								"description": "%java.debugger.attach.port.description%",
								"type": [
									"number",
									"string"
								]
							},
							"processId": {
								"anyOf": [
									{
										"default": "${command:PickJavaProcess}",
										"description": "%java.debugger.attach.processPicker.description%",
										"enum": [
											"${command:PickJavaProcess}"
										]
									},
									{
										"description": "%java.debugger.attach.processId.description%",
										"type": "integer"
									}
								]
							},
							"projectName": {
								"default": "",
								"description": "%java.debugger.attach.projectName.description%",
								"type": "string"
							},
							"sourcePaths": {
								"default": [],
								"description": "%java.debugger.launch.sourcePaths.description%",
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"stepFilters": {
								"default": {
									"skipClasses": [
										"$JDK",
										"junit.*"
									],
									"skipConstructors": false,
									"skipStaticInitializers": false,
									"skipSynthetics": false
								},
								"description": "%java.debugger.launch.stepFilters.description%",
								"properties": {
									"skipClasses": {
										"default": [
											"$JDK",
											"junit.*"
										],
										"description": "%java.debugger.launch.skipClasses.description%",
										"items": {
											"anyOf": [
												{
													"enum": [
														"$JDK",
														"$Libraries",
														"java.lang.ClassLoader",
														""
													],
													"enumDescriptions": [
														"%java.debugger.launch.skipClasses.skipJDK%",
														"%java.debugger.launch.skipClasses.skipLibraries%",
														"%java.debugger.launch.skipClasses.skipClassLoader%",
														"%java.debugger.launch.skipClasses.skipClassPattern%"
													]
												},
												"string"
											]
										},
										"type": "array"
									},
									"skipConstructors": {
										"default": false,
										"description": "%java.debugger.launch.skipConstructors.description%",
										"type": "boolean"
									},
									"skipStaticInitializers": {
										"default": false,
										"description": "%java.debugger.launch.skipStaticInitializers.description%",
										"type": "boolean"
									},
									"skipSynthetics": {
										"default": false,
										"description": "%java.debugger.launch.skipSynthetics.description%",
										"type": "boolean"
									}
								},
								"type": "object"
							},
							"timeout": {
								"default": 30000,
								"description": "%java.debugger.attach.timeout.description%",
								"type": "number"
							}
						}
					},
					"launch": {
						"properties": {
							"args": {
								"default": "",
								"description": "%java.debugger.launch.args.description%",
								"type": [
									"array",
									"string"
								]
							},
							"classPaths": {
								"default": [],
								"description": "%java.debugger.launch.classPaths.description%",
								"items": {
									"anyOf": [
										{
											"enum": [
												"$Auto",
												"$Runtime",
												"$Test",
												"!<path>"
											],
											"enumDescriptions": [
												"%java.debugger.launch.classPaths.auto%",
												"%java.debugger.launch.classPaths.runtime%",
												"%java.debugger.launch.classPaths.test%",
												"%java.debugger.launch.classPaths.exclude%"
											]
										},
										"string"
									]
								},
								"type": "array"
							},
							"console": {
								"default": "integratedTerminal",
								"description": "%java.debugger.launch.console.description%",
								"enum": [
									"internalConsole",
									"integratedTerminal",
									"externalTerminal"
								],
								"enumDescriptions": [
									"%java.debugger.launch.internalConsole.description%",
									"%java.debugger.launch.integratedTerminal.description%",
									"%java.debugger.launch.externalTerminal.description%"
								],
								"type": "string"
							},
							"cwd": {
								"default": "${workspaceFolder}",
								"description": "%java.debugger.launch.cwd.description%",
								"type": "string"
							},
							"encoding": {
								"default": "UTF-8",
								"description": "%java.debugger.launch.encoding.description%",
								"type": "string"
							},
							"env": {
								"default": {},
								"description": "%java.debugger.launch.env.description%",
								"type": "object"
							},
							"envFile": {
								"default": "${workspaceFolder}/.env",
								"description": "%java.debugger.launch.envFile.description%",
								"type": [
									"array",
									"string"
								]
							},
							"javaExec": {
								"default": "",
								"description": "%java.debugger.launch.javaExec.description%",
								"type": "string"
							},
							"mainClass": {
								"default": "",
								"description": "%java.debugger.launch.mainClass.description%",
								"type": "string"
							},
							"modulePaths": {
								"default": [],
								"description": "%java.debugger.launch.modulePaths.description%",
								"items": {
									"anyOf": [
										{
											"enum": [
												"$Auto",
												"$Runtime",
												"$Test",
												"!<path>"
											],
											"enumDescriptions": [
												"%java.debugger.launch.modulePaths.auto%",
												"%java.debugger.launch.modulePaths.runtime%",
												"%java.debugger.launch.modulePaths.test%",
												"%java.debugger.launch.modulePaths.exclude%"
											]
										},
										"string"
									]
								},
								"type": "array"
							},
							"projectName": {
								"default": "",
								"description": "%java.debugger.launch.projectName.description%",
								"type": "string"
							},
							"shortenCommandLine": {
								"default": "auto",
								"description": "%java.debugger.launch.shortenCommandLine.description%",
								"enum": [
									"none",
									"jarmanifest",
									"argfile",
									"auto"
								],
								"enumDescriptions": [
									"%java.debugger.launch.shortenCommandLine.none%",
									"%java.debugger.launch.shortenCommandLine.jarmanifest%",
									"%java.debugger.launch.shortenCommandLine.argfile%",
									"%java.debugger.launch.shortenCommandLine.auto%"
								],
								"type": "string"
							},
							"sourcePaths": {
								"default": [],
								"description": "%java.debugger.launch.sourcePaths.description%",
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							"stepFilters": {
								"default": {
									"skipClasses": [
										"$JDK",
										"junit.*"
									],
									"skipConstructors": false,
									"skipStaticInitializers": false,
									"skipSynthetics": false
								},
								"description": "%java.debugger.launch.stepFilters.description%",
								"properties": {
									"skipClasses": {
										"default": [
											"$JDK",
											"junit.*"
										],
										"description": "%java.debugger.launch.skipClasses.description%",
										"items": {
											"anyOf": [
												{
													"enum": [
														"$JDK",
														"$Libraries",
														"java.lang.ClassLoader",
														""
													],
													"enumDescriptions": [
														"%java.debugger.launch.skipClasses.skipJDK%",
														"%java.debugger.launch.skipClasses.skipLibraries%",
														"%java.debugger.launch.skipClasses.skipClassLoader%",
														"%java.debugger.launch.skipClasses.skipClassPattern%"
													]
												},
												"string"
											]
										},
										"type": "array"
									},
									"skipConstructors": {
										"default": true,
										"description": "%java.debugger.launch.skipConstructors.description%",
										"type": "boolean"
									},
									"skipStaticInitializers": {
										"default": true,
										"description": "%java.debugger.launch.skipStaticInitializers.description%",
										"type": "boolean"
									},
									"skipSynthetics": {
										"default": true,
										"description": "%java.debugger.launch.skipSynthetics.description%",
										"type": "boolean"
									}
								},
								"type": "object"
							},
							"stopOnEntry": {
								"default": true,
								"description": "%java.debugger.launch.stopOnEntry.description%",
								"type": "boolean"
							},
							"vmArgs": {
								"default": "",
								"description": "%java.debugger.launch.vmArgs.description%",
								"type": [
									"array",
									"string"
								]
							}
						},
						"required": [
							"mainClass"
						]
					}
				},
				"configurationSnippets": [
					{
						"body": {
							"mainClass": "",
							"name": "Launch Java Program",
							"request": "launch",
							"type": "java"
						},
						"description": "%java.debugger.snippet.launch.description%",
						"label": "Java: Launch Program"
					},
					{
						"body": {
							"console": "externalTerminal",
							"mainClass": "",
							"name": "Launch External Terminal",
							"request": "launch",
							"type": "java"
						},
						"description": "%java.debugger.snippet.launchInExternalTerminal.description%",
						"label": "Java: Launch Program in External Terminal"
					},
					{
						"body": {
							"mainClass": "^\"\\${file}\"",
							"name": "Launch Current File",
							"request": "launch",
							"type": "java"
						},
						"description": "%java.debugger.snippet.launchCurrentFile.description%",
						"label": "Java: Launch Program in Current File"
					},
					{
						"body": {
							"args": "^\"\\${command:SpecifyProgramArgs}\"",
							"mainClass": "",
							"name": "Launch with Arguments Prompt",
							"request": "launch",
							"type": "java"
						},
						"description": "%java.debugger.snippet.launchWithArgumentsPrompt.description%",
						"label": "Java: Launch Program with Arguments Prompt"
					},
					{
						"body": {
							"hostName": "localhost",
							"name": "Attach",
							"port": "<debug port of the debuggee>",
							"request": "attach",
							"type": "java"
						},
						"description": "%java.debugger.snippet.attach.description%",
						"label": "Java: Attach"
					},
					{
						"body": {
							"name": "Attach by Process ID",
							"processId": "^\"\\${command:PickJavaProcess}\"",
							"request": "attach",
							"type": "java"
						},
						"description": "%java.debugger.snippet.attachProcess.description%",
						"label": "Java: Attach to Process"
					},
					{
						"body": {
							"hostName": "<The host name or ip address of remote debuggee>",
							"name": "Attach to Remote Program",
							"port": "<debug port of remote debuggee>",
							"request": "attach",
							"type": "java"
						},
						"description": "%java.debugger.snippet.attachRemote.description%",
						"label": "Java: Attach to Remote Program"
					}
				],
				"label": "Java",
				"languages": [
					"java"
				],
				"type": "java",
				"variables": {
					"PickJavaProcess": "JavaDebug.PickJavaProcess",
					"SpecifyProgramArgs": "JavaDebug.SpecifyProgramArgs"
				}
			}
		],
		"javaExtensions": [
			"./server/com.microsoft.java.debug.plugin-0.53.1.jar"
		],
		"menus": {
			"commandPalette": [
				{
					"command": "java.debug.hotCodeReplace",
					"when": "false"
				},
				{
					"command": "java.debug.runJavaFile",
					"when": "false"
				},
				{
					"command": "java.debug.debugJavaFile",
					"when": "false"
				},
				{
					"command": "java.debug.continueAll",
					"when": "false"
				},
				{
					"command": "java.debug.continueOthers",
					"when": "false"
				},
				{
					"command": "java.debug.pauseAll",
					"when": "false"
				},
				{
					"command": "java.debug.pauseOthers",
					"when": "false"
				},
				{
					"command": "java.debug.runFromProjectView",
					"when": "false"
				},
				{
					"command": "java.debug.debugFromProjectView",
					"when": "false"
				},
				{
					"command": "java.debug.variables.showHex",
					"when": "false"
				},
				{
					"command": "java.debug.variables.notShowHex",
					"when": "false"
				},
				{
					"command": "java.debug.variables.showQualifiedNames",
					"when": "false"
				},
				{
					"command": "java.debug.variables.notShowQualifiedNames",
					"when": "false"
				},
				{
					"command": "java.debug.variables.showStaticVariables",
					"when": "false"
				},
				{
					"command": "java.debug.variables.notShowStaticVariables",
					"when": "false"
				},
				{
					"command": "java.debug.variables.showLogicalStructure",
					"when": "false"
				},
				{
					"command": "java.debug.variables.notShowLogicalStructure",
					"when": "false"
				},
				{
					"command": "java.debug.variables.showToString",
					"when": "false"
				},
				{
					"command": "java.debug.variables.notShowToString",
					"when": "false"
				},
				{
					"command": "java.debug.variables.autoExpandLazyVariables",
					"when": "false"
				},
				{
					"command": "java.debug.variables.manualExpandLazyVariables",
					"when": "false"
				}
			],
			"debug/callstack/context": [
				{
					"command": "java.debug.continueAll",
					"when": "inDebugMode && debugType == java && callStackItemType == 'thread'"
				},
				{
					"command": "java.debug.continueOthers",
					"when": "inDebugMode && debugType == java && callStackItemType == 'thread'"
				},
				{
					"command": "java.debug.pauseAll",
					"when": "inDebugMode && debugType == java && callStackItemType == 'thread'"
				},
				{
					"command": "java.debug.pauseOthers",
					"when": "inDebugMode && debugType == java && callStackItemType == 'thread'"
				}
			],
			"debug/toolBar": [
				{
					"command": "java.debug.hotCodeReplace",
					"group": "navigation@100",
					"when": "inDebugMode && debugType == java && javaHotReload == 'manual' && javaHotReloadOn"
				}
			],
			"debug/variables/context": [
				{
					"command": "java.debug.variables.showHex",
					"group": "1_view@1",
					"when": "debugType == 'java' && javadebug:showHex == 'off'"
				},
				{
					"command": "java.debug.variables.notShowHex",
					"group": "1_view@1",
					"when": "debugType == 'java' && javadebug:showHex == 'on'"
				},
				{
					"command": "java.debug.variables.showQualifiedNames",
					"group": "1_view@2",
					"when": "debugType == 'java' && javadebug:showQualifiedNames == 'off'"
				},
				{
					"command": "java.debug.variables.notShowQualifiedNames",
					"group": "1_view@2",
					"when": "debugType == 'java' && javadebug:showQualifiedNames == 'on'"
				},
				{
					"command": "java.debug.variables.showStaticVariables",
					"group": "1_view@3",
					"when": "debugType == 'java' && javadebug:showStaticVariables == 'off'"
				},
				{
					"command": "java.debug.variables.notShowStaticVariables",
					"group": "1_view@3",
					"when": "debugType == 'java' && javadebug:showStaticVariables == 'on'"
				},
				{
					"command": "java.debug.variables.showLogicalStructure",
					"group": "1_view@4",
					"when": "debugType == 'java' && javadebug:showLogicalStructure == 'off'"
				},
				{
					"command": "java.debug.variables.notShowLogicalStructure",
					"group": "1_view@4",
					"when": "debugType == 'java' && javadebug:showLogicalStructure == 'on'"
				},
				{
					"command": "java.debug.variables.autoExpandLazyVariables",
					"group": "1_view@6",
					"when": "debugType == 'java' && javadebug:expandLazyVariable == 'off'"
				},
				{
					"command": "java.debug.variables.manualExpandLazyVariables",
					"group": "1_view@6",
					"when": "debugType == 'java' && javadebug:expandLazyVariable == 'on'"
				}
			],
			"editor/context": [
				{
					"command": "java.debug.runJavaFile",
					"group": "javadebug@1",
					"when": "editorLangId == java && resourceExtname == .java"
				},
				{
					"command": "java.debug.debugJavaFile",
					"group": "javadebug@2",
					"when": "editorLangId == java && resourceExtname == .java"
				}
			],
			"editor/title/run": [
				{
					"command": "java.debug.runJavaFile",
					"group": "1_javadebug@10",
					"when": "resourceExtname == .java"
				},
				{
					"command": "java.debug.debugJavaFile",
					"group": "1_javadebug@20",
					"when": "resourceExtname == .java"
				}
			],
			"explorer/context": [
				{
					"command": "java.debug.runJavaFile",
					"group": "1_javaactions@90",
					"when": "resourceExtname == .java"
				},
				{
					"command": "java.debug.debugJavaFile",
					"group": "1_javaactions@91",
					"when": "resourceExtname == .java"
				}
			],
			"view/item/context": [
				{
					"command": "java.debug.debugFromProjectView",
					"group": "inline@100",
					"when": "view == javaProjectExplorer && viewItem =~ /java:project(?=.*?\\b\\+java\\b)(?=.*?\\b\\+uri\\b)/"
				},
				{
					"command": "java.debug.runFromProjectView",
					"group": "8_execution@10",
					"when": "view == javaProjectExplorer && viewItem =~ /java:project(?=.*?\\b\\+java\\b)(?=.*?\\b\\+uri\\b)/"
				},
				{
					"command": "java.debug.debugFromProjectView",
					"group": "8_execution@20",
					"when": "view == javaProjectExplorer && viewItem =~ /java:project(?=.*?\\b\\+java\\b)(?=.*?\\b\\+uri\\b)/"
				}
			]
		}
	},
	"dependencies": {
		"compare-versions": "^6.1.1",
		"dotenv": "^16.4.5",
		"lodash": "^4.17.21",
		"uuid": "^11.0.3"
	},
	"description": "A lightweight Java debugger for Visual Studio Code",
	"devDependencies": {
		"@types/glob": "^8.1.0",
		"@types/lodash": "^4.17.13",
		"@types/node": "^22.9.0",
		"@types/uuid": "^10.0.0",
		"ts-loader": "^9.5.1"
	},
	"displayName": "Debugger for Java",
	"icon": "logo.png",
	"main": "./dist/extension",
	"name": "vscode-java-debug",
	"preview": false,
	"scripts": {
		"build": "webpack --config webpack.config.js --mode=\"production\"",
		"build-server": "node scripts/build/buildJdtlsExt.js",
		"compile": "tsc -p . && webpack --config webpack.config.js"
	},
	"workspaceTrust": {
		"description": "Extension may require your trust on workspace for code execution.",
		"request": "onDemand"
	}
}
